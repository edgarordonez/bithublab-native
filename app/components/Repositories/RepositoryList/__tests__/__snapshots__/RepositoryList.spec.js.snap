// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RepositoryList Renders without crashing 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "description": "Components of graphs build with StencilJS & D3.js",
        "name": "edgarordonez/d3-stencil",
        "provider": "github",
        "url": "https://github.com/edgarordonez/d3-stencil",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  invertStickyHeaders={undefined}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
                "elevation": 2,
                "flexDirection": "row",
                "margin": 10,
                "padding": 20,
              },
              Object {
                "shadowColor": "black",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 1,
                },
                "shadowOpacity": 0.5,
                "shadowRadius": 2,
              },
            ]
          }
        >
          <Image
            source={1}
            style={
              Object {
                "height": 25,
                "width": 25,
              }
            }
          />
          <View
            style={
              Object {
                "paddingLeft": 5,
                "paddingRight": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontFamily": "Roboto-Black",
                  "fontSize": 20,
                  "marginBottom": 5,
                }
              }
            >
              edgarordonez/d3-stencil
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontFamily": "Roboto-Regular",
                  "fontSize": 14,
                }
              }
            >
              Components of graphs build with StencilJS & D3.js
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
